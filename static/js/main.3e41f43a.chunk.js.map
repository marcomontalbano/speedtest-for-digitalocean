{"version":3,"sources":["ga.js","AppDispatcher.js","app/actions/ActionTypes.js","app/stores/SpeedtestStore.js","app/components/Filter.js","app/components/Spinner.js","app/components/Results.js","lib/datacenter.js","lib/ResultStorage.js","app/actions/SpeedtestAction.js","app/class/Speedtest.js","lib/SpeedtestDigitalocean.js","app/components/App.js","index.js"],"names":["document","querySelectorAll","forEach","link","addEventListener","window","ga","hitType","eventCategory","eventAction","eventLabel","this","getAttribute","AppDispatcher","Dispatcher","ActionTypes","stores_SpeedtestStore","SpeedtestStore","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","results","currentDatacenter","isRunning","state","action","newState","JSON","parse","stringify","type","value","ReduceStore","Filter","props","_this","onSpeedtestStoreHandler","setState","speedtestStore","getState","startStopHandler","speedtest","stop","start","checkFastests","filterDatacenters","fastestsQnt","filterDatacentersHandler","e","val","target","prevState","_","xor","filterHandler","isFilterOpen","checkFastestsHandler","checked","datacenters","map","o","name","listener","addListener","remove","items","_this2","length","item","key","react_default","a","createElement","className","disabled","onChange","defaultChecked","indexOf","_this3","continents","uniq","continent","renderDatacenters","filter","onClick","renderContinents","Component","Spinner","Results","result","store","app_components_Spinner","rel","href","datacenter","url","region","ping","concat","download","toFixed","upload","renderRow","renderResults","Symbol","ResultStorage","clean","parseInt","findKey","index","isNaN","push","undefined","sort","arguments","orderBy","isArray","SpeedtestAction","dispatch","test","Speedtest","currentTest","eventValue","Math","round","esm_get","prototype","resultStorage","_gaEvent","onbeforeunload","SpeedtestDigitalocean","__onMessageHandler","bind","logs","options","currentIndex","currentDatacenterSet","get","update","_run","_completed","currentTest_update","sc_skin","sc_autostart","sc_bgc","sc_bc","sc_hc","sc_cc","sc_w","sc_h","version","sc_userid","sc_forceSecureWebsockets","serverUrl","serverTitle","license","server","latencyMeasurementType","sc_script","setAttribute","location","protocol","getElementsByTagName","appendChild","cleanResults","assign","getElementById","element","pause","event","data","currentTest_get","_runNext","App","app_components_Filter","app_components_Results","ReactDOM","render","app_components_App","packageJson"],"mappings":"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","file":"static/js/main.3e41f43a.chunk.js","sourcesContent":["document.querySelectorAll('.js--link').forEach((link) => {\n    link.addEventListener('click', function() {\n        window.ga('send', {\n            hitType: 'event',\n            eventCategory: 'Link',\n            eventAction: 'click',\n            eventLabel: this.getAttribute('data-label'),\n        });\n    });\n});\n","import { Dispatcher } from 'flux';\n\nexport default new Dispatcher();\n","export default {\n    CHANGED_TEST: 'CHANGED_TEST',\n    CHANGED_RESULTS: 'CHANGED_RESULTS',\n    STARTED: 'STARTED',\n    STOPPED: 'STOPPED',\n};\n","import { ReduceStore } from 'flux/utils';\nimport AppDispatcher from '../../AppDispatcher';\nimport ActionTypes from '../actions/ActionTypes';\n\nclass SpeedtestStore extends ReduceStore {\n    constructor() {\n        super(AppDispatcher);\n    }\n\n    getInitialState() {\n        return {\n            results: [],\n            currentDatacenter: {},\n            isRunning: false\n        };\n    }\n\n    reduce(state, action) {\n        const newState = JSON.parse(JSON.stringify(state));\n        switch (action.type) {\n            case ActionTypes.STARTED:\n                newState.isRunning = true;\n                return newState;\n            case ActionTypes.STOPPED:\n                newState.isRunning = false;\n                return newState;\n            case ActionTypes.CHANGED_TEST:\n                newState.currentDatacenter = action.value;\n                return newState;\n            case ActionTypes.CHANGED_RESULTS:\n                newState.results = action.value;\n                return newState;\n            default:\n                return state;\n        }\n    }\n}\n\nexport default new SpeedtestStore();\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport SpeedtestStore from '../stores/SpeedtestStore';\n\nimport './Filter.css';\n\nclass Filter extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            speedtestStore: SpeedtestStore.getState(),\n            checkFastests: true,\n            isFilterOpen: false,\n            fastestsQnt: 4,\n            filterDatacenters: this.props.speedtest.datacenters.map(o => o.name),\n        };\n    }\n\n    componentDidMount() {\n        this.listener = SpeedtestStore.addListener(this.onSpeedtestStoreHandler);\n    }\n\n    componentWillUnmount() {\n        this.listener.remove();\n    }\n\n    onSpeedtestStoreHandler = () => {\n        this.setState({\n            speedtestStore: SpeedtestStore.getState()\n        });\n    }\n\n    startStopHandler = () => {\n        if (this.state.speedtestStore.isRunning)  {\n            this.props.speedtest.stop();\n        } else {\n            this.props.speedtest.start({\n                checkFastests: this.state.checkFastests,\n                filterDatacenters: this.state.filterDatacenters,\n                fastestsQnt: this.state.fastestsQnt,\n            });\n        }\n    }\n\n    filterDatacentersHandler = (e) => {\n        const val = e.target.value;\n\n        this.setState(prevState => ({\n            filterDatacenters: _.xor(prevState.filterDatacenters, [val])\n        }));\n    }\n\n    filterHandler = () => {\n        this.setState(prevState => ({\n            isFilterOpen: !prevState.isFilterOpen\n        }));\n    }\n\n    checkFastestsHandler = (e) => {\n        this.setState({\n            checkFastests: e.target.checked\n        });\n    }\n\n    renderDatacenters(items) {\n        return items.length > 0 ? _.map(items, (item, key) => (\n            <div key={key} className=\"Datacenter uk-width-1-2\">\n                <label>\n                    <input disabled={this.state.speedtestStore.isRunning} onChange={this.filterDatacentersHandler} className=\"uk-checkbox\" type=\"checkbox\" value={item.name} defaultChecked={this.state.filterDatacenters.indexOf(item.name) >= 0} /> {item.name}\n                </label>\n            </div>\n        )) : null;\n    }\n\n    renderContinents(items) {\n        const continents = _.uniq(_.map(items, o => o.continent));\n        return continents.length > 0 ? _.map(continents, (continent, key) => (\n            <div key={key} className=\"Continent uk-width-1-2 uk-width-1-3@m\">\n                <label className=\"uk-form-label\">{continent}</label>\n                <div className=\"uk-form-controls uk-grid\">\n                    {this.renderDatacenters(_.filter(items, o => o.continent === continent))}\n                </div>\n            </div>\n        )) : null;\n    }\n\n    render() {\n        return (\n            <div className=\"Filter uk-container\">\n                <div className=\"uk-grid\">\n                    <div className=\"check-only-fastests uk-width-1-1 uk-width-3-5@s uk-text-right\">\n                        <form>\n                            <fieldset className=\"uk-fieldset\">\n                                <label>\n                                    <input className=\"uk-checkbox\" type=\"checkbox\" onClick={this.checkFastestsHandler} disabled={this.state.speedtestStore.isRunning} defaultChecked={this.state.checkFastests} /> Check only the fastest {this.state.fastestsQnt}\n                                </label>\n                            </fieldset>\n                        </form>\n                    </div>\n                    <div className=\"uk-width-1-1 uk-width-1-5@s uk-text-center\">\n                        <button className=\"uk-button uk-button-primary uk-width-1-1\" onClick={this.startStopHandler}>{this.state.speedtestStore.isRunning ? 'stop' : 'start'}</button>\n                    </div>\n                    <div className=\"uk-width-1-1 uk-width-1-5@s uk-text-center\">\n                        <button className=\"uk-button uk-button-default uk-width-1-1\" onClick={this.filterHandler}>filter</button>\n                    </div>\n                </div>\n                { this.state.isFilterOpen &&\n                    <div className=\"uk-grid\">\n                        <div className=\"uk-width-1-1\">\n                            <form className=\"uk-form-stacked\">\n                                <div className=\"uk-grid-small uk-child-width-auto uk-grid\">\n                                    {this.renderContinents(this.props.speedtest.datacenters)}\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\n\nimport './Spinner.css';\n\nclass Spinner extends Component {\n\n    render() {\n        return (\n            <div className=\"sk-three-bounce\">\n                <div className=\"sk-child sk-bounce1\"></div>\n                <div className=\"sk-child sk-bounce2\"></div>\n                <div className=\"sk-child sk-bounce2\"></div>\n            </div>\n        );\n    }\n\n}\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport SpeedtestStore from '../stores/SpeedtestStore';\nimport Spinner from './Spinner';\n\nimport './Results.css';\n\nclass Results extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            speedtestStore: SpeedtestStore.getState(),\n        };\n    }\n\n    componentDidMount() {\n        this.listener = SpeedtestStore.addListener(this.onSpeedtestStoreHandler);\n    }\n\n    componentWillUnmount() {\n        this.listener.remove();\n    }\n\n    onSpeedtestStoreHandler = () => {\n        this.setState({\n            speedtestStore: SpeedtestStore.getState()\n        });\n    }\n\n    renderRow(result, store) {\n        return (\n            <tr key={result.name} className={store.isRunning && store.currentDatacenter.name === result.name ? 'uk-active' : null}>\n                <td>{store.isRunning && store.currentDatacenter.name === result.name ? (<Spinner></Spinner>) : null}</td>\n                <td><a rel=\"noopener noreferrer\" target=\"_blank\" href={result.datacenter ? result.datacenter.url : '#'}>{result.name}</a></td>\n                <td>{result.datacenter ? result.datacenter.region : ''}</td>\n                <td>{result.ping     ? `${result.ping} ms`                           : ''}</td>\n                <td>{result.download ? `${(result.download / 1000).toFixed(2)} Mb/s` : ''}</td>\n                <td>{result.upload   ? `${(result.upload   / 1000).toFixed(2)} Mb/s` : ''}</td>\n            </tr>\n        );\n    }\n\n    renderResults(store) {\n        return (\n            <table className=\"uk-table uk-table-divider uk-text-align-center uk-table-responsive\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th>name</th>\n                        <th>region</th>\n                        <th>ping</th>\n                        <th>download</th>\n                        <th>upload</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        _.map(store.results, (result, key) => {\n                            return this.renderRow(result, store);\n                        })\n                    }\n                </tbody>\n            </table>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"Results uk-container\">\n                <form>\n                    <fieldset className=\"uk-fieldset\">\n\n                        <div className=\"uk-margin uk-grid-small uk-child-width-auto uk-grid\">\n                            {this.renderResults(this.state.speedtestStore)}\n                        </div>\n\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Results;\n","export default [\n    {\n        name: 'NYC1',\n        continent: 'North America',\n        region: 'New York',\n        url: 'http://speedtest-nyc1.digitalocean.com'\n    },\n    {\n        name: 'NYC2',\n        continent: 'North America',\n        region: 'New York',\n        url: 'http://speedtest-nyc2.digitalocean.com'\n    },\n    {\n        name: 'NYC3',\n        continent: 'North America',\n        region: 'New York',\n        url: 'http://speedtest-nyc3.digitalocean.com'\n    },\n    {\n        name: 'AMS2',\n        continent: 'Europe',\n        region: 'Amsterdam',\n        url: 'http://speedtest-ams2.digitalocean.com'\n    },\n    {\n        name: 'AMS3',\n        continent: 'Europe',\n        region: 'Amsterdam',\n        url: 'http://speedtest-ams3.digitalocean.com'\n    },\n    {\n        name: 'SFO1',\n        continent: 'North America',\n        region: 'San Francisco',\n        url: 'http://speedtest-sfo1.digitalocean.com'\n    },\n    {\n        name: 'SFO2',\n        continent: 'North America',\n        region: 'San Francisco',\n        url: 'http://speedtest-sfo2.digitalocean.com'\n    },\n    {\n        name: 'SGP1',\n        continent: 'Asia',\n        region: 'Singapore',\n        url: 'http://speedtest-sgp1.digitalocean.com'\n    },\n    {\n        name: 'LON1',\n        continent: 'Europe',\n        region: 'London',\n        url: 'http://speedtest-lon1.digitalocean.com'\n    },\n    {\n        name: 'FRA1',\n        continent: 'Europe',\n        region: 'Frankfurt',\n        url: 'http://speedtest-fra1.digitalocean.com'\n    },\n    {\n        name: 'TOR1',\n        continent: 'North America',\n        region: 'Toronto',\n        url: 'http://speedtest-tor1.digitalocean.com'\n    },\n    {\n        name: 'BLR1',\n        continent: 'Asia',\n        region: 'Bangalore',\n        url: 'http://speedtest-blr1.digitalocean.com'\n    },\n];\n","import _ from 'lodash';\n\nlet results = Symbol();\n\nexport default class ResultStorage {\n\n    constructor() {\n        this.clean();\n    }\n\n    get results() {\n        return this[results];\n    }\n\n    indexOf(name) {\n        return parseInt(_.findKey(this[results], { 'name': name }), 10);\n    }\n\n    update(name, key, value) {\n        let index = this.indexOf(name);\n\n        if (isNaN(index)) {\n            this[results].push({\n                name: name\n            });\n        }\n\n        index = this.indexOf(name);\n\n        this[results][index][key] = value;\n\n        return value;\n    }\n\n    get(name, key) {\n        let result = _.findKey(this[results], { 'name': name });\n\n        if (key === undefined) {\n            return this[results][result];\n        }\n\n        return this[results][result][key];\n    }\n\n    orderBy(key, sort = 'asc') {\n        this[results] = _.orderBy(this[results], _.isArray(key) ? key : [key], _.isArray(sort) ? sort : [sort]);\n    }\n\n    clean() {\n        this[results] = [];\n    }\n}\n","import AppDispatcher from '../../AppDispatcher';\nimport ActionTypes from './ActionTypes';\n\nexport default {\n    start() {\n        AppDispatcher.dispatch({\n            type: ActionTypes.STARTED,\n        });\n    },\n    stop() {\n        AppDispatcher.dispatch({\n            type: ActionTypes.STOPPED,\n        });\n    },\n    changeResults(results) {\n        AppDispatcher.dispatch({\n            type: ActionTypes.CHANGED_RESULTS,\n            value: results,\n        });\n    },\n    changeTest(test) {\n        AppDispatcher.dispatch({\n            type: ActionTypes.CHANGED_TEST,\n            value: test,\n        });\n    },\n};\n","import SpeedtestDigitalocean from '../../lib/SpeedtestDigitalocean';\nimport SpeedtestAction from '../actions/SpeedtestAction';\n\nexport default class Speedtest extends SpeedtestDigitalocean {\n\n    _gaEvent(action, value) {\n        window.ga('send', {\n            hitType: 'event',\n            eventCategory: 'SpeedTest',\n            eventAction: action,\n            eventLabel: this.currentTest.name,\n            eventValue: Math.round(value)\n        });\n    }\n\n    currentTest_update(key, value) {\n        super.currentTest_update(key, value);\n        SpeedtestAction.changeResults(this.resultStorage.results);\n    }\n\n    __speedcheckerPingTestFinished(value) {\n        this._gaEvent('ping', value);\n        super.__speedcheckerPingTestFinished(value);\n    }\n\n    __speedcheckerDownloadFinished(value) {\n        this._gaEvent('download', value);\n        super.__speedcheckerDownloadFinished(value);\n    }\n\n    __speedcheckerUploadFinished(value) {\n        this._gaEvent('upload', value);\n        super.__speedcheckerUploadFinished(value);\n    }\n\n    _run() {\n        // enable navigation prompt\n        window.onbeforeunload = function () {\n            return true;\n        };\n\n        super._run();\n        SpeedtestAction.start();\n        SpeedtestAction.changeTest(this.currentTest);\n    }\n\n    stop() {\n        // remove navigation prompt\n        window.onbeforeunload = null;\n\n        super.stop();\n        SpeedtestAction.stop();\n    }\n\n}\n","import _ from 'lodash';\nimport datacenter from './datacenter';\nimport ResultStorage from './ResultStorage';\n\nexport default class SpeedtestDigitalocean {\n\n    constructor() {\n        window.addEventListener('message', this.__onMessageHandler.bind(this), false);\n\n        this.logs = [];\n\n        this.options = {};\n\n        this.currentIndex = 0;\n        this.resultStorage = new ResultStorage();\n        this.currentDatacenterSet = this.datacenters;\n    }\n\n    get datacenters() {\n        return datacenter;\n    }\n\n    get currentTest() {\n        return this.currentDatacenterSet[this.currentIndex];\n    }\n\n    currentTest_get(key) {\n        return this.resultStorage.get(this.currentTest.name, key);\n    }\n\n    currentTest_update(key, value) {\n        this.resultStorage.update(this.currentTest.name, key, value);\n        this.resultStorage.orderBy('ping');\n    }\n\n    _runNext() {\n        // next test available\n        if (this.currentIndex < this.currentDatacenterSet.length - 1) {\n            this.currentIndex += 1;\n            this._run();\n        } else { // tests are finished\n            if (this.options.checkFastests === true) {\n                this.currentIndex = 0;\n                this.options.checkFastests = false;\n\n                // re-create dataset with fastests\n                const options = this.options;\n                this.currentDatacenterSet = this.resultStorage.results.filter(function (o, index) {\n                    return index < options.fastestsQnt;\n                });\n\n                this.currentDatacenterSet = this.currentDatacenterSet.map(function (o) {\n                    return o.datacenter;\n                });\n\n                this._run();\n            } else {\n                this._completed();\n            }\n        }\n    }\n\n    _run() {\n        this.currentTest_update('datacenter', this.currentTest);\n\n        window.sc_skin = '';\n        window.sc_autostart = 'true';\n        window.sc_bgc = '0xFFFFFF';\n        window.sc_bc = '0x333333';\n        window.sc_hc = '0x333333';\n        window.sc_cc = '0x0080ff';\n        window.sc_w = 400;\n        window.sc_h = 250;\n        window.version = 3;\n        window.sc_userid = 52722000;\n        window.sc_forceSecureWebsockets = 0;\n        window.serverUrl = this.currentTest.url;\n        window.serverTitle = this.currentTest.name;\n        window.license = '';\n        window.server = 'php';\n        window.latencyMeasurementType = 'icmp';\n\n        let sc_script = document.createElement('script');\n        sc_script.setAttribute('src', ((('https:' === document.location.protocol) ? 'https' : 'http') + '://www.speedcheckercdn.com/speedchecker.js'));\n        document.getElementsByTagName('head')[0].appendChild(sc_script);\n    }\n\n    _completed() {\n        this.stop();\n        this.cleanResults();\n    }\n\n    start(options) {\n\n        this.stop();\n\n        this.options = _.assign({\n            filterDatacenters: this.currentDatacenterSet.map(o => o.name),\n            checkFastests: false,\n            fastestsQnt: 4,\n        }, options || {});\n\n        this.currentDatacenterSet = _.filter(this.currentDatacenterSet, (o) => {\n            return this.options.filterDatacenters.indexOf(o.name) >= 0;\n        });\n\n        // create scope if it doesn't exist\n        if (!document.getElementById('speedcheckerdiv')) {\n            let element = document.createElement('div');\n            element.setAttribute('id', 'speedcheckerdiv');\n            document.getElementsByTagName('body')[0].appendChild(element);\n        }\n\n        this._run();\n    }\n\n    pause() {\n        if (document.getElementById('speedcheckerdiv')) {\n            document.getElementById('speedcheckerdiv').remove();\n        }\n    }\n\n    cleanResults() {\n        this.resultStorage.clean();\n    }\n\n    stop() {\n        this.pause();\n        this.cleanResults();\n        this.currentIndex = 0;\n        this.currentDatacenterSet = this.datacenters;\n    }\n\n    /**\n     * speedchecker messages\n     */\n\n    __onMessageHandler(event) {\n        const type = `__${event.data.type}`;\n        const value = event.data.value;\n\n        this.logs.push(event);\n\n        if (this[type]) {\n            this[type](value);\n        }\n    }\n\n    __speedcheckerDebug(value) {}\n    __speedcheckerDownloadPrepared(value) {}\n    __speedcheckerDownloadStarted(value) {}\n    __speedcheckerLinkValid(value) {}\n    __speedcheckerPingFinished(value) {}\n    __speedcheckerPingStarted(value) {}\n    __speedcheckerReady(value) {}\n    __speedcheckerStartRequired(value) {}\n    __speedcheckerStarted(value) {}\n    __speedcheckerUploadPrepared(value) {}\n    __speedcheckerUploadStarted(value) {}\n\n    __speedcheckerError(value) {\n        this.currentTest_update('retry', (this.currentTest_get('retry') ? this.currentTest_get('retry') : 0) + 1);\n        this.currentTest_update('error', value);\n        this._run();\n    }\n\n    __speedcheckerPingTestFinished(value) {\n        this.currentTest_update('ping', value);\n\n        if (this.options.checkFastests === true) {\n            this._runNext();\n        }\n    }\n\n    __speedcheckerDownloadProgress(value) {\n        this.currentTest_update('download', value[0]);\n    }\n\n    __speedcheckerDownloadFinished(value) {\n        this.currentTest_update('download', value);\n    }\n\n    __speedcheckerUploadProgress(value) {\n        this.currentTest_update('upload', value[0]);\n    }\n\n    __speedcheckerUploadFinished(value) {\n        this.currentTest_update('upload', value);\n    }\n\n    __speedcheckerTakenTestSaved(value) {\n        this._runNext();\n    };\n\n}\n","import React, { Component } from 'react';\nimport Filter from './Filter';\nimport Results from './Results';\n\nimport Speedtest from '../class/Speedtest';\n\nimport './App.css';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.speedtest = new Speedtest();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Filter speedtest={this.speedtest} />\n                <Results speedtest={this.speedtest} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/components/App';\n//import registerServiceWorker from './registerServiceWorker';\n\nimport packageJson from '../package.json';\nimport './ga.js';\n\nimport '../node_modules/uikit/dist/css/uikit.css';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\nReactDOM.render(\n    (\n        <div>\n            v {packageJson.version}\n        </div>\n    ),\n    document.getElementById('version')\n);\n\n//registerServiceWorker();\n"],"sourceRoot":""}