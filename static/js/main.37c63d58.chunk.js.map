{"version":3,"sources":["ga.js","AppDispatcher.js","app/actions/ActionTypes.js","app/stores/SpeedtestStore.js","app/components/Filter.js","app/components/Spinner.js","app/components/Results.js","lib/datacenter.js","lib/ResultStorage.js","app/actions/SpeedtestAction.js","app/class/Speedtest.js","lib/SpeedtestDigitalocean.js","app/components/App.js","index.js"],"names":["document","querySelectorAll","forEach","link","addEventListener","window","ga","hitType","eventCategory","eventAction","eventLabel","this","getAttribute","Dispatcher","AppDispatcher","results","currentDatacenter","isRunning","state","action","newState","JSON","parse","stringify","type","ActionTypes","value","ReduceStore","Filter","props","onSpeedtestStoreHandler","setState","speedtestStore","SpeedtestStore","getState","startStopHandler","speedtest","stop","start","checkFastests","filterDatacenters","fastestsQnt","filterDatacentersHandler","e","val","target","prevState","_","xor","filterHandler","isFilterOpen","checkFastestsHandler","checked","datacenters","map","o","name","listener","addListener","remove","items","length","item","key","className","disabled","onChange","defaultChecked","indexOf","continents","uniq","continent","renderDatacenters","filter","onClick","renderContinents","Component","Spinner","Results","result","store","rel","href","datacenter","url","region","ping","download","toFixed","upload","renderRow","renderResults","Symbol","ResultStorage","clean","parseInt","findKey","index","isNaN","push","undefined","sort","orderBy","isArray","dispatch","test","Speedtest","currentTest","eventValue","Math","round","SpeedtestAction","resultStorage","_gaEvent","onbeforeunload","__onMessageHandler","bind","logs","options","currentIndex","currentDatacenterSet","get","update","_run","_completed","currentTest_update","sc_skin","sc_autostart","sc_bgc","sc_bc","sc_hc","sc_cc","sc_w","sc_h","version","sc_userid","sc_forceSecureWebsockets","serverUrl","serverTitle","license","server","latencyMeasurementType","sc_script","createElement","setAttribute","location","protocol","getElementsByTagName","appendChild","cleanResults","assign","getElementById","element","pause","event","data","currentTest_get","_runNext","App","ReactDOM","render","packageJson"],"mappings":"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","file":"static/js/main.37c63d58.chunk.js","sourcesContent":["document.querySelectorAll('.js--link').forEach((link) => {\n    link.addEventListener('click', function() {\n        window.ga('send', {\n            hitType: 'event',\n            eventCategory: 'Link',\n            eventAction: 'click',\n            eventLabel: this.getAttribute('data-label'),\n        });\n    });\n});\n","import { Dispatcher } from 'flux';\n\nexport default new Dispatcher();\n","export default {\n    CHANGED_TEST: 'CHANGED_TEST',\n    CHANGED_RESULTS: 'CHANGED_RESULTS',\n    STARTED: 'STARTED',\n    STOPPED: 'STOPPED',\n};\n","import { ReduceStore } from 'flux/utils';\nimport AppDispatcher from '../../AppDispatcher';\nimport ActionTypes from '../actions/ActionTypes';\n\nclass SpeedtestStore extends ReduceStore {\n    constructor() {\n        super(AppDispatcher);\n    }\n\n    getInitialState() {\n        return {\n            results: [],\n            currentDatacenter: {},\n            isRunning: false\n        };\n    }\n\n    reduce(state, action) {\n        const newState = JSON.parse(JSON.stringify(state));\n        switch (action.type) {\n            case ActionTypes.STARTED:\n                newState.isRunning = true;\n                return newState;\n            case ActionTypes.STOPPED:\n                newState.isRunning = false;\n                return newState;\n            case ActionTypes.CHANGED_TEST:\n                newState.currentDatacenter = action.value;\n                return newState;\n            case ActionTypes.CHANGED_RESULTS:\n                newState.results = action.value;\n                return newState;\n            default:\n                return state;\n        }\n    }\n}\n\nexport default new SpeedtestStore();\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport SpeedtestStore from '../stores/SpeedtestStore';\n\nimport './Filter.css';\n\nclass Filter extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            speedtestStore: SpeedtestStore.getState(),\n            checkFastests: true,\n            isFilterOpen: false,\n            fastestsQnt: 4,\n            filterDatacenters: this.props.speedtest.datacenters.map(o => o.name),\n        };\n    }\n\n    componentDidMount() {\n        this.listener = SpeedtestStore.addListener(this.onSpeedtestStoreHandler);\n    }\n\n    componentWillUnmount() {\n        this.listener.remove();\n    }\n\n    onSpeedtestStoreHandler = () => {\n        this.setState({\n            speedtestStore: SpeedtestStore.getState()\n        });\n    }\n\n    startStopHandler = () => {\n        if (this.state.speedtestStore.isRunning)  {\n            this.props.speedtest.stop();\n        } else {\n            this.props.speedtest.start({\n                checkFastests: this.state.checkFastests,\n                filterDatacenters: this.state.filterDatacenters,\n                fastestsQnt: this.state.fastestsQnt,\n            });\n        }\n    }\n\n    filterDatacentersHandler = (e) => {\n        const val = e.target.value;\n\n        this.setState(prevState => ({\n            filterDatacenters: _.xor(prevState.filterDatacenters, [val])\n        }));\n    }\n\n    filterHandler = () => {\n        this.setState(prevState => ({\n            isFilterOpen: !prevState.isFilterOpen\n        }));\n    }\n\n    checkFastestsHandler = (e) => {\n        this.setState({\n            checkFastests: e.target.checked\n        });\n    }\n\n    renderDatacenters(items) {\n        return items.length > 0 ? _.map(items, (item, key) => (\n            <div key={key} className=\"Datacenter uk-width-1-2\">\n                <label>\n                    <input disabled={this.state.speedtestStore.isRunning} onChange={this.filterDatacentersHandler} className=\"uk-checkbox\" type=\"checkbox\" value={item.name} defaultChecked={this.state.filterDatacenters.indexOf(item.name) >= 0} /> {item.name}\n                </label>\n            </div>\n        )) : null;\n    }\n\n    renderContinents(items) {\n        const continents = _.uniq(_.map(items, o => o.continent));\n        return continents.length > 0 ? _.map(continents, (continent, key) => (\n            <div key={key} className=\"Continent uk-width-1-2 uk-width-1-3@m\">\n                <label className=\"uk-form-label\">{continent}</label>\n                <div className=\"uk-form-controls uk-grid\">\n                    {this.renderDatacenters(_.filter(items, o => o.continent === continent))}\n                </div>\n            </div>\n        )) : null;\n    }\n\n    render() {\n        return (\n            <div className=\"Filter uk-container\">\n                <div className=\"uk-grid\">\n                    <div className=\"check-only-fastests uk-width-1-1 uk-width-3-5@s uk-text-right\">\n                        <form>\n                            <fieldset className=\"uk-fieldset\">\n                                <label>\n                                    <input className=\"uk-checkbox\" type=\"checkbox\" onClick={this.checkFastestsHandler} disabled={this.state.speedtestStore.isRunning} defaultChecked={this.state.checkFastests} /> Check only the fastest {this.state.fastestsQnt}\n                                </label>\n                            </fieldset>\n                        </form>\n                    </div>\n                    <div className=\"uk-width-1-1 uk-width-1-5@s uk-text-center\">\n                        <button className=\"uk-button uk-button-primary uk-width-1-1\" onClick={this.startStopHandler}>{this.state.speedtestStore.isRunning ? 'stop' : 'start'}</button>\n                    </div>\n                    <div className=\"uk-width-1-1 uk-width-1-5@s uk-text-center\">\n                        <button className=\"uk-button uk-button-default uk-width-1-1\" onClick={this.filterHandler}>filter</button>\n                    </div>\n                </div>\n                { this.state.isFilterOpen &&\n                    <div className=\"uk-grid\">\n                        <div className=\"uk-width-1-1\">\n                            <form className=\"uk-form-stacked\">\n                                <div className=\"uk-grid-small uk-child-width-auto uk-grid\">\n                                    {this.renderContinents(this.props.speedtest.datacenters)}\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\n\nimport './Spinner.css';\n\nclass Spinner extends Component {\n\n    render() {\n        return (\n            <div className=\"sk-three-bounce\">\n                <div className=\"sk-child sk-bounce1\"></div>\n                <div className=\"sk-child sk-bounce2\"></div>\n                <div className=\"sk-child sk-bounce2\"></div>\n            </div>\n        );\n    }\n\n}\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport SpeedtestStore from '../stores/SpeedtestStore';\nimport Spinner from './Spinner';\n\nimport './Results.css';\n\nclass Results extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            speedtestStore: SpeedtestStore.getState(),\n        };\n    }\n\n    componentDidMount() {\n        this.listener = SpeedtestStore.addListener(this.onSpeedtestStoreHandler);\n    }\n\n    componentWillUnmount() {\n        this.listener.remove();\n    }\n\n    onSpeedtestStoreHandler = () => {\n        this.setState({\n            speedtestStore: SpeedtestStore.getState()\n        });\n    }\n\n    renderRow(result, store) {\n        return (\n            <tr key={result.name} className={store.isRunning && store.currentDatacenter.name === result.name ? 'uk-active' : null}>\n                <td>{store.isRunning && store.currentDatacenter.name === result.name ? (<Spinner></Spinner>) : null}</td>\n                <td><a rel=\"noopener noreferrer\" target=\"_blank\" href={result.datacenter ? result.datacenter.url : '#'}>{result.name}</a></td>\n                <td>{result.datacenter ? result.datacenter.region : ''}</td>\n                <td>{result.ping     ? `${result.ping} ms`                           : ''}</td>\n                <td>{result.download ? `${(result.download / 1000).toFixed(2)} Mb/s` : ''}</td>\n                <td>{result.upload   ? `${(result.upload   / 1000).toFixed(2)} Mb/s` : ''}</td>\n            </tr>\n        );\n    }\n\n    renderResults(store) {\n        return (\n            <table className=\"uk-table uk-table-divider uk-text-align-center uk-table-responsive\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th>name</th>\n                        <th>region</th>\n                        <th>ping</th>\n                        <th>download</th>\n                        <th>upload</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        _.map(store.results, (result, key) => {\n                            return this.renderRow(result, store);\n                        })\n                    }\n                </tbody>\n            </table>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"Results uk-container\">\n                <form>\n                    <fieldset className=\"uk-fieldset\">\n\n                        <div className=\"uk-margin uk-grid-small uk-child-width-auto uk-grid\">\n                            {this.renderResults(this.state.speedtestStore)}\n                        </div>\n\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Results;\n","export default [\n    {\n        name: 'NYC1',\n        continent: 'North America',\n        region: 'New York',\n        url: 'http://speedtest-nyc1.digitalocean.com'\n    },\n    {\n        name: 'NYC2',\n        continent: 'North America',\n        region: 'New York',\n        url: 'http://speedtest-nyc2.digitalocean.com'\n    },\n    {\n        name: 'NYC3',\n        continent: 'North America',\n        region: 'New York',\n        url: 'http://speedtest-nyc3.digitalocean.com'\n    },\n    {\n        name: 'AMS2',\n        continent: 'Europe',\n        region: 'Amsterdam',\n        url: 'http://speedtest-ams2.digitalocean.com'\n    },\n    {\n        name: 'AMS3',\n        continent: 'Europe',\n        region: 'Amsterdam',\n        url: 'http://speedtest-ams3.digitalocean.com'\n    },\n    {\n        name: 'SFO1',\n        continent: 'North America',\n        region: 'San Francisco',\n        url: 'http://speedtest-sfo1.digitalocean.com'\n    },\n    {\n        name: 'SFO2',\n        continent: 'North America',\n        region: 'San Francisco',\n        url: 'http://speedtest-sfo2.digitalocean.com'\n    },\n    {\n        name: 'SGP1',\n        continent: 'Asia',\n        region: 'Singapore',\n        url: 'http://speedtest-sgp1.digitalocean.com'\n    },\n    {\n        name: 'LON1',\n        continent: 'Europe',\n        region: 'London',\n        url: 'http://speedtest-lon1.digitalocean.com'\n    },\n    {\n        name: 'FRA1',\n        continent: 'Europe',\n        region: 'Frankfurt',\n        url: 'http://speedtest-fra1.digitalocean.com'\n    },\n    {\n        name: 'TOR1',\n        continent: 'North America',\n        region: 'Toronto',\n        url: 'http://speedtest-tor1.digitalocean.com'\n    },\n    {\n        name: 'BLR1',\n        continent: 'Asia',\n        region: 'Bangalore',\n        url: 'http://speedtest-blr1.digitalocean.com'\n    },\n];\n","import _ from 'lodash';\n\nlet results = Symbol();\n\nexport default class ResultStorage {\n\n    constructor() {\n        this.clean();\n    }\n\n    get results() {\n        return this[results];\n    }\n\n    indexOf(name) {\n        return parseInt(_.findKey(this[results], { 'name': name }), 10);\n    }\n\n    update(name, key, value) {\n        let index = this.indexOf(name);\n\n        if (isNaN(index)) {\n            this[results].push({\n                name: name\n            });\n        }\n\n        index = this.indexOf(name);\n\n        this[results][index][key] = value;\n\n        return value;\n    }\n\n    get(name, key) {\n        let result = _.findKey(this[results], { 'name': name });\n\n        if (key === undefined) {\n            return this[results][result];\n        }\n\n        return this[results][result][key];\n    }\n\n    orderBy(key, sort = 'asc') {\n        this[results] = _.orderBy(this[results], _.isArray(key) ? key : [key], _.isArray(sort) ? sort : [sort]);\n    }\n\n    clean() {\n        this[results] = [];\n    }\n}\n","import AppDispatcher from '../../AppDispatcher';\nimport ActionTypes from './ActionTypes';\n\nexport default {\n    start() {\n        AppDispatcher.dispatch({\n            type: ActionTypes.STARTED,\n        });\n    },\n    stop() {\n        AppDispatcher.dispatch({\n            type: ActionTypes.STOPPED,\n        });\n    },\n    changeResults(results) {\n        AppDispatcher.dispatch({\n            type: ActionTypes.CHANGED_RESULTS,\n            value: results,\n        });\n    },\n    changeTest(test) {\n        AppDispatcher.dispatch({\n            type: ActionTypes.CHANGED_TEST,\n            value: test,\n        });\n    },\n};\n","import SpeedtestDigitalocean from '../../lib/SpeedtestDigitalocean';\nimport SpeedtestAction from '../actions/SpeedtestAction';\n\nexport default class Speedtest extends SpeedtestDigitalocean {\n\n    _gaEvent(action, value) {\n        window.ga('send', {\n            hitType: 'event',\n            eventCategory: 'SpeedTest',\n            eventAction: action,\n            eventLabel: this.currentTest.name,\n            eventValue: Math.round(value)\n        });\n    }\n\n    currentTest_update(key, value) {\n        super.currentTest_update(key, value);\n        SpeedtestAction.changeResults(this.resultStorage.results);\n    }\n\n    __speedcheckerPingTestFinished(value) {\n        this._gaEvent('ping', value);\n        super.__speedcheckerPingTestFinished(value);\n    }\n\n    __speedcheckerDownloadFinished(value) {\n        this._gaEvent('download', value);\n        super.__speedcheckerDownloadFinished(value);\n    }\n\n    __speedcheckerUploadFinished(value) {\n        this._gaEvent('upload', value);\n        super.__speedcheckerUploadFinished(value);\n    }\n\n    _run() {\n        // enable navigation prompt\n        window.onbeforeunload = function () {\n            return true;\n        };\n\n        super._run();\n        SpeedtestAction.start();\n        SpeedtestAction.changeTest(this.currentTest);\n    }\n\n    stop() {\n        // remove navigation prompt\n        window.onbeforeunload = null;\n\n        super.stop();\n        SpeedtestAction.stop();\n    }\n\n}\n","import _ from 'lodash';\nimport datacenter from './datacenter';\nimport ResultStorage from './ResultStorage';\n\nexport default class SpeedtestDigitalocean {\n\n    constructor() {\n        window.addEventListener('message', this.__onMessageHandler.bind(this), false);\n\n        this.logs = [];\n\n        this.options = {};\n\n        this.currentIndex = 0;\n        this.resultStorage = new ResultStorage();\n        this.currentDatacenterSet = this.datacenters;\n    }\n\n    get datacenters() {\n        return datacenter;\n    }\n\n    get currentTest() {\n        return this.currentDatacenterSet[this.currentIndex];\n    }\n\n    currentTest_get(key) {\n        return this.resultStorage.get(this.currentTest.name, key);\n    }\n\n    currentTest_update(key, value) {\n        this.resultStorage.update(this.currentTest.name, key, value);\n        this.resultStorage.orderBy('ping');\n    }\n\n    _runNext() {\n        // next test available\n        if (this.currentIndex < this.currentDatacenterSet.length - 1) {\n            this.currentIndex += 1;\n            this._run();\n        } else { // tests are finished\n            if (this.options.checkFastests === true) {\n                this.currentIndex = 0;\n                this.options.checkFastests = false;\n\n                // re-create dataset with fastests\n                const options = this.options;\n                this.currentDatacenterSet = this.resultStorage.results.filter(function (o, index) {\n                    return index < options.fastestsQnt;\n                });\n\n                this.currentDatacenterSet = this.currentDatacenterSet.map(function (o) {\n                    return o.datacenter;\n                });\n\n                this._run();\n            } else {\n                this._completed();\n            }\n        }\n    }\n\n    _run() {\n        this.currentTest_update('datacenter', this.currentTest);\n\n        window.sc_skin = '';\n        window.sc_autostart = 'true';\n        window.sc_bgc = '0xFFFFFF';\n        window.sc_bc = '0x333333';\n        window.sc_hc = '0x333333';\n        window.sc_cc = '0x0080ff';\n        window.sc_w = 400;\n        window.sc_h = 250;\n        window.version = 3;\n        window.sc_userid = 52722000;\n        window.sc_forceSecureWebsockets = 0;\n        window.serverUrl = this.currentTest.url;\n        window.serverTitle = this.currentTest.name;\n        window.license = '';\n        window.server = 'php';\n        window.latencyMeasurementType = 'icmp';\n\n        let sc_script = document.createElement('script');\n        sc_script.setAttribute('src', ((('https:' === document.location.protocol) ? 'https' : 'http') + '://www.speedcheckercdn.com/speedchecker.js'));\n        document.getElementsByTagName('head')[0].appendChild(sc_script);\n    }\n\n    _completed() {\n        this.stop();\n        this.cleanResults();\n    }\n\n    start(options) {\n\n        this.stop();\n\n        this.options = _.assign({\n            filterDatacenters: this.currentDatacenterSet.map(o => o.name),\n            checkFastests: false,\n            fastestsQnt: 4,\n        }, options || {});\n\n        this.currentDatacenterSet = _.filter(this.currentDatacenterSet, (o) => {\n            return this.options.filterDatacenters.indexOf(o.name) >= 0;\n        });\n\n        // create scope if it doesn't exist\n        if (!document.getElementById('speedcheckerdiv')) {\n            let element = document.createElement('div');\n            element.setAttribute('id', 'speedcheckerdiv');\n            document.getElementsByTagName('body')[0].appendChild(element);\n        }\n\n        this._run();\n    }\n\n    pause() {\n        if (document.getElementById('speedcheckerdiv')) {\n            document.getElementById('speedcheckerdiv').remove();\n        }\n    }\n\n    cleanResults() {\n        this.resultStorage.clean();\n    }\n\n    stop() {\n        this.pause();\n        this.cleanResults();\n        this.currentIndex = 0;\n        this.currentDatacenterSet = this.datacenters;\n    }\n\n    /**\n     * speedchecker messages\n     */\n\n    __onMessageHandler(event) {\n        const type = `__${event.data.type}`;\n        const value = event.data.value;\n\n        this.logs.push(event);\n\n        if (this[type]) {\n            this[type](value);\n        }\n    }\n\n    __speedcheckerDebug(value) {}\n    __speedcheckerDownloadPrepared(value) {}\n    __speedcheckerDownloadStarted(value) {}\n    __speedcheckerLinkValid(value) {}\n    __speedcheckerPingFinished(value) {}\n    __speedcheckerPingStarted(value) {}\n    __speedcheckerReady(value) {}\n    __speedcheckerStartRequired(value) {}\n    __speedcheckerStarted(value) {}\n    __speedcheckerUploadPrepared(value) {}\n    __speedcheckerUploadStarted(value) {}\n\n    __speedcheckerError(value) {\n        this.currentTest_update('retry', (this.currentTest_get('retry') ? this.currentTest_get('retry') : 0) + 1);\n        this.currentTest_update('error', value);\n        this._run();\n    }\n\n    __speedcheckerPingTestFinished(value) {\n        this.currentTest_update('ping', value);\n\n        if (this.options.checkFastests === true) {\n            this._runNext();\n        }\n    }\n\n    __speedcheckerDownloadProgress(value) {\n        this.currentTest_update('download', value[0]);\n    }\n\n    __speedcheckerDownloadFinished(value) {\n        this.currentTest_update('download', value);\n    }\n\n    __speedcheckerUploadProgress(value) {\n        this.currentTest_update('upload', value[0]);\n    }\n\n    __speedcheckerUploadFinished(value) {\n        this.currentTest_update('upload', value);\n    }\n\n    __speedcheckerTakenTestSaved(value) {\n        this._runNext();\n    };\n\n}\n","import React, { Component } from 'react';\nimport Filter from './Filter';\nimport Results from './Results';\n\nimport Speedtest from '../class/Speedtest';\n\nimport './App.css';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.speedtest = new Speedtest();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Filter speedtest={this.speedtest} />\n                <Results speedtest={this.speedtest} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/components/App';\n//import registerServiceWorker from './registerServiceWorker';\n\nimport packageJson from '../package.json';\nimport './ga.js';\n\nimport '../node_modules/uikit/dist/css/uikit.css';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\nReactDOM.render(\n    (\n        <div>\n            v {packageJson.version}\n        </div>\n    ),\n    document.getElementById('version')\n);\n\n//registerServiceWorker();\n"],"sourceRoot":""}