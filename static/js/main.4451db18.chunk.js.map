{"version":3,"sources":["ga.js","AppDispatcher.js","app/actions/ActionTypes.js","app/stores/SpeedtestStore.js","app/components/Filter.js","app/components/Spinner.js","app/components/Results.js","lib/datacenter.js","lib/ResultStorage.js","app/actions/SpeedtestAction.js","app/class/Speedtest.js","lib/SpeedtestDigitalocean.js","app/components/App.js","index.js"],"names":["document","querySelectorAll","forEach","link","addEventListener","window","ga","hitType","eventCategory","eventAction","eventLabel","this","getAttribute","Dispatcher","AppDispatcher","results","currentDatacenter","isRunning","state","action","newState","JSON","parse","stringify","type","ActionTypes","value","ReduceStore","Filter","props","onSpeedtestStoreHandler","setState","speedtestStore","SpeedtestStore","getState","startStopHandler","speedtest","stop","start","checkFastests","filterDatacenters","fastestsQnt","filterDatacentersHandler","e","val","target","prevState","_","xor","filterContinentHandler","continent","datacenters","filter","o","map","name","checked","union","difference","filterHandler","isFilterOpen","checkFastestsHandler","isDatacenterSelected","datacenter","indexOf","listener","addListener","remove","items","length","item","key","className","disabled","onChange","datacentersGroupedByContinent","groupBy","Object","entries","every","renderDatacenters","console","log","onClick","defaultChecked","renderContinents","Component","Spinner","Results","result","store","rel","href","url","region","ping","download","toFixed","upload","renderRow","renderResults","Symbol","ResultStorage","clean","parseInt","findKey","index","isNaN","push","undefined","sort","orderBy","isArray","dispatch","test","Speedtest","currentTest","eventValue","Math","round","SpeedtestAction","resultStorage","_gaEvent","onbeforeunload","__onMessageHandler","bind","logs","options","currentIndex","currentDatacenterSet","get","update","_run","_completed","currentTest_update","sc_skin","sc_autostart","sc_bgc","sc_bc","sc_hc","sc_cc","sc_w","sc_h","version","sc_userid","sc_forceSecureWebsockets","serverUrl","serverTitle","license","server","latencyMeasurementType","sc_script","createElement","setAttribute","location","protocol","getElementsByTagName","appendChild","cleanResults","assign","getElementById","element","pause","event","data","currentTest_get","_runNext","App","ReactDOM","render","packageJson"],"mappings":"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","file":"static/js/main.4451db18.chunk.js","sourcesContent":["document.querySelectorAll('.js--link').forEach((link) => {\n    link.addEventListener('click', function() {\n        window.ga('send', {\n            hitType: 'event',\n            eventCategory: 'Link',\n            eventAction: 'click',\n            eventLabel: this.getAttribute('data-label'),\n        });\n    });\n});\n","import { Dispatcher } from 'flux';\n\nexport default new Dispatcher();\n","export default {\n    CHANGED_TEST: 'CHANGED_TEST',\n    CHANGED_RESULTS: 'CHANGED_RESULTS',\n    STARTED: 'STARTED',\n    STOPPED: 'STOPPED',\n};\n","import { ReduceStore } from 'flux/utils';\nimport AppDispatcher from '../../AppDispatcher';\nimport ActionTypes from '../actions/ActionTypes';\n\nclass SpeedtestStore extends ReduceStore {\n    constructor() {\n        super(AppDispatcher);\n    }\n\n    getInitialState() {\n        return {\n            results: [],\n            currentDatacenter: {},\n            isRunning: false\n        };\n    }\n\n    reduce(state, action) {\n        const newState = JSON.parse(JSON.stringify(state));\n        switch (action.type) {\n            case ActionTypes.STARTED:\n                newState.isRunning = true;\n                return newState;\n            case ActionTypes.STOPPED:\n                newState.isRunning = false;\n                return newState;\n            case ActionTypes.CHANGED_TEST:\n                newState.currentDatacenter = action.value;\n                return newState;\n            case ActionTypes.CHANGED_RESULTS:\n                newState.results = action.value;\n                return newState;\n            default:\n                return state;\n        }\n    }\n}\n\nexport default new SpeedtestStore();\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport SpeedtestStore from '../stores/SpeedtestStore';\n\nimport './Filter.css';\n\nclass Filter extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            speedtestStore: SpeedtestStore.getState(),\n            checkFastests: true,\n            isFilterOpen: false,\n            fastestsQnt: 4,\n            filterDatacenters: this.props.speedtest.datacenters.map(o => o.name),\n        };\n    }\n\n    componentDidMount() {\n        this.listener = SpeedtestStore.addListener(this.onSpeedtestStoreHandler);\n    }\n\n    componentWillUnmount() {\n        this.listener.remove();\n    }\n\n    onSpeedtestStoreHandler = () => {\n        this.setState({\n            speedtestStore: SpeedtestStore.getState()\n        });\n    }\n\n    startStopHandler = () => {\n        if (this.state.speedtestStore.isRunning)  {\n            this.props.speedtest.stop();\n        } else {\n            this.props.speedtest.start({\n                checkFastests: this.state.checkFastests,\n                filterDatacenters: this.state.filterDatacenters,\n                fastestsQnt: this.state.fastestsQnt,\n            });\n        }\n    }\n\n    filterDatacentersHandler = (e) => {\n        const val = e.target.value;\n\n        this.setState(prevState => ({\n            filterDatacenters: _.xor(prevState.filterDatacenters, [val])\n        }));\n    }\n\n    filterContinentHandler = (e) => {\n        const continent = e.target.value;\n        const datacenters = this.props.speedtest.datacenters\n            .filter(o => o.continent === continent)\n            .map(o => o.name);\n\n        if (e.target.checked) {\n            this.setState(prevState => ({\n                filterDatacenters: _.union(prevState.filterDatacenters, datacenters)\n            }));\n        } else {\n            this.setState(prevState => ({\n                filterDatacenters: _.difference(prevState.filterDatacenters, datacenters)\n            }));\n        }\n    }\n\n    filterHandler = () => {\n        this.setState(prevState => ({\n            isFilterOpen: !prevState.isFilterOpen\n        }));\n    }\n\n    checkFastestsHandler = (e) => {\n        this.setState({\n            checkFastests: e.target.checked\n        });\n    }\n\n    isDatacenterSelected = (datacenter) => {\n        return this.state.filterDatacenters.indexOf(datacenter.name) >= 0;\n    }\n\n    renderDatacenters(items) {\n        return items.length > 0 ? _.map(items, (item, key) => (\n            <div key={key} className=\"Datacenter uk-width-1-2\">\n                <label>\n                    <input\n                        type=\"checkbox\" className=\"uk-checkbox\" value={item.name}\n                        disabled={this.state.speedtestStore.isRunning}\n                        onChange={this.filterDatacentersHandler}\n                        checked={this.isDatacenterSelected(item)} /> {item.name}\n                </label>\n            </div>\n        )) : null;\n    }\n\n    renderContinents(items) {\n        const datacentersGroupedByContinent = _.groupBy(items, 'continent');\n        return Object.entries(datacentersGroupedByContinent).map(([continent, datacenters]) => (\n            <div key={continent} className=\"Continent uk-width-1-2 uk-width-1-3@m\">\n                <label className=\"uk-form-label\">\n                    <input\n                        type=\"checkbox\" className=\"uk-checkbox\" value={continent}\n                        disabled={this.state.speedtestStore.isRunning}\n                        onChange={this.filterContinentHandler}\n                        checked={datacenters.every(this.isDatacenterSelected)} /> {continent}\n                </label>\n                <div className=\"uk-form-controls uk-grid\">\n                    {this.renderDatacenters(datacenters)}\n                </div>\n            </div>\n        ));\n    }\n\n    render() {\n        console.log('here')\n        return (\n            <div className=\"Filter uk-container\">\n                <div className=\"uk-grid\">\n                    <div className=\"check-only-fastests uk-width-1-1 uk-width-3-5@s uk-text-right\">\n                        <form>\n                            <fieldset className=\"uk-fieldset\">\n                                <label>\n                                    <input className=\"uk-checkbox\" type=\"checkbox\" onClick={this.checkFastestsHandler} disabled={this.state.speedtestStore.isRunning} defaultChecked={this.state.checkFastests} /> Check only the fastest {this.state.fastestsQnt}\n                                </label>\n                            </fieldset>\n                        </form>\n                    </div>\n                    <div className=\"uk-width-1-1 uk-width-1-5@s uk-text-center\">\n                        <button disabled={this.state.filterDatacenters.length === 0} className=\"uk-button uk-button-primary uk-width-1-1\" onClick={this.startStopHandler}>{this.state.speedtestStore.isRunning ? 'stop' : 'start'}</button>\n                    </div>\n                    <div className=\"uk-width-1-1 uk-width-1-5@s uk-text-center\">\n                        <button className=\"uk-button uk-button-default uk-width-1-1\" onClick={this.filterHandler}>filter</button>\n                    </div>\n                </div>\n                { this.state.isFilterOpen &&\n                    <div className=\"uk-grid\">\n                        <div className=\"uk-width-1-1\">\n                            <form className=\"uk-form-stacked\">\n                                <div className=\"uk-grid-small uk-child-width-auto uk-grid\">\n                                    {this.renderContinents(this.props.speedtest.datacenters)}\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Filter;\n","import React from 'react';\n\nimport './Spinner.css';\n\nconst Spinner = () => (\n    <div className=\"sk-three-bounce\">\n        <div className=\"sk-child sk-bounce1\"></div>\n        <div className=\"sk-child sk-bounce2\"></div>\n        <div className=\"sk-child sk-bounce2\"></div>\n    </div>\n)\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport SpeedtestStore from '../stores/SpeedtestStore';\nimport Spinner from './Spinner';\n\nimport './Results.css';\n\nclass Results extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            speedtestStore: SpeedtestStore.getState(),\n        };\n    }\n\n    componentDidMount() {\n        this.listener = SpeedtestStore.addListener(this.onSpeedtestStoreHandler);\n    }\n\n    componentWillUnmount() {\n        this.listener.remove();\n    }\n\n    onSpeedtestStoreHandler = () => {\n        this.setState({\n            speedtestStore: SpeedtestStore.getState()\n        });\n    }\n\n    renderRow(result, store) {\n        return (\n            <tr key={result.name} className={store.isRunning && store.currentDatacenter.name === result.name ? 'uk-active' : null}>\n                <td>{store.isRunning && store.currentDatacenter.name === result.name ? (<Spinner></Spinner>) : null}</td>\n                <td><a rel=\"noopener noreferrer\" target=\"_blank\" href={result.datacenter ? result.datacenter.url : '#'}>{result.name}</a></td>\n                <td>{result.datacenter ? result.datacenter.region : ''}</td>\n                <td>{result.ping     ? `${result.ping} ms`                           : ''}</td>\n                <td>{result.download ? `${(result.download / 1000).toFixed(2)} Mb/s` : ''}</td>\n                <td>{result.upload   ? `${(result.upload   / 1000).toFixed(2)} Mb/s` : ''}</td>\n            </tr>\n        );\n    }\n\n    renderResults(store) {\n        return (\n            <table className=\"uk-table uk-table-divider uk-text-align-center uk-table-responsive\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th>name</th>\n                        <th>region</th>\n                        <th>ping</th>\n                        <th>download</th>\n                        <th>upload</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        _.map(store.results, (result, key) => {\n                            return this.renderRow(result, store);\n                        })\n                    }\n                </tbody>\n            </table>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"Results uk-container\">\n                <form>\n                    <fieldset className=\"uk-fieldset\">\n\n                        <div className=\"uk-margin uk-grid-small uk-child-width-auto uk-grid\">\n                            {this.renderResults(this.state.speedtestStore)}\n                        </div>\n\n                    </fieldset>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Results;\n","export default [\n    {\n        name: 'NYC1',\n        continent: 'North America',\n        region: 'New York',\n        url: 'http://speedtest-nyc1.digitalocean.com'\n    },\n    {\n        name: 'NYC2',\n        continent: 'North America',\n        region: 'New York',\n        url: 'http://speedtest-nyc2.digitalocean.com'\n    },\n    {\n        name: 'NYC3',\n        continent: 'North America',\n        region: 'New York',\n        url: 'http://speedtest-nyc3.digitalocean.com'\n    },\n    {\n        name: 'AMS2',\n        continent: 'Europe',\n        region: 'Amsterdam',\n        url: 'http://speedtest-ams2.digitalocean.com'\n    },\n    {\n        name: 'AMS3',\n        continent: 'Europe',\n        region: 'Amsterdam',\n        url: 'http://speedtest-ams3.digitalocean.com'\n    },\n    {\n        name: 'SFO1',\n        continent: 'North America',\n        region: 'San Francisco',\n        url: 'http://speedtest-sfo1.digitalocean.com'\n    },\n    {\n        name: 'SFO2',\n        continent: 'North America',\n        region: 'San Francisco',\n        url: 'http://speedtest-sfo2.digitalocean.com'\n    },\n    {\n        name: 'SGP1',\n        continent: 'Asia',\n        region: 'Singapore',\n        url: 'http://speedtest-sgp1.digitalocean.com'\n    },\n    {\n        name: 'LON1',\n        continent: 'Europe',\n        region: 'London',\n        url: 'http://speedtest-lon1.digitalocean.com'\n    },\n    {\n        name: 'FRA1',\n        continent: 'Europe',\n        region: 'Frankfurt',\n        url: 'http://speedtest-fra1.digitalocean.com'\n    },\n    {\n        name: 'TOR1',\n        continent: 'North America',\n        region: 'Toronto',\n        url: 'http://speedtest-tor1.digitalocean.com'\n    },\n    {\n        name: 'BLR1',\n        continent: 'Asia',\n        region: 'Bangalore',\n        url: 'http://speedtest-blr1.digitalocean.com'\n    },\n];\n","import _ from 'lodash';\n\nlet results = Symbol();\n\nexport default class ResultStorage {\n\n    constructor() {\n        this.clean();\n    }\n\n    get results() {\n        return this[results];\n    }\n\n    indexOf(name) {\n        return parseInt(_.findKey(this[results], { 'name': name }), 10);\n    }\n\n    update(name, key, value) {\n        let index = this.indexOf(name);\n\n        if (isNaN(index)) {\n            this[results].push({\n                name: name\n            });\n        }\n\n        index = this.indexOf(name);\n\n        this[results][index][key] = value;\n\n        return value;\n    }\n\n    get(name, key) {\n        let result = _.findKey(this[results], { 'name': name });\n\n        if (key === undefined) {\n            return this[results][result];\n        }\n\n        return this[results][result][key];\n    }\n\n    orderBy(key, sort = 'asc') {\n        this[results] = _.orderBy(this[results], _.isArray(key) ? key : [key], _.isArray(sort) ? sort : [sort]);\n    }\n\n    clean() {\n        this[results] = [];\n    }\n}\n","import AppDispatcher from '../../AppDispatcher';\nimport ActionTypes from './ActionTypes';\n\nexport default {\n    start() {\n        AppDispatcher.dispatch({\n            type: ActionTypes.STARTED,\n        });\n    },\n    stop() {\n        AppDispatcher.dispatch({\n            type: ActionTypes.STOPPED,\n        });\n    },\n    changeResults(results) {\n        AppDispatcher.dispatch({\n            type: ActionTypes.CHANGED_RESULTS,\n            value: results,\n        });\n    },\n    changeTest(test) {\n        AppDispatcher.dispatch({\n            type: ActionTypes.CHANGED_TEST,\n            value: test,\n        });\n    },\n};\n","import SpeedtestDigitalocean from '../../lib/SpeedtestDigitalocean';\nimport SpeedtestAction from '../actions/SpeedtestAction';\n\nexport default class Speedtest extends SpeedtestDigitalocean {\n\n    _gaEvent(action, value) {\n        window.ga('send', {\n            hitType: 'event',\n            eventCategory: 'SpeedTest',\n            eventAction: action,\n            eventLabel: this.currentTest.name,\n            eventValue: Math.round(value)\n        });\n    }\n\n    currentTest_update(key, value) {\n        super.currentTest_update(key, value);\n        SpeedtestAction.changeResults(this.resultStorage.results);\n    }\n\n    __speedcheckerPingTestFinished(value) {\n        this._gaEvent('ping', value);\n        super.__speedcheckerPingTestFinished(value);\n    }\n\n    __speedcheckerDownloadFinished(value) {\n        this._gaEvent('download', value);\n        super.__speedcheckerDownloadFinished(value);\n    }\n\n    __speedcheckerUploadFinished(value) {\n        this._gaEvent('upload', value);\n        super.__speedcheckerUploadFinished(value);\n    }\n\n    _run() {\n        // enable navigation prompt\n        window.onbeforeunload = function () {\n            return true;\n        };\n\n        super._run();\n        SpeedtestAction.start();\n        SpeedtestAction.changeTest(this.currentTest);\n    }\n\n    stop() {\n        // remove navigation prompt\n        window.onbeforeunload = null;\n\n        super.stop();\n        SpeedtestAction.stop();\n    }\n\n}\n","import _ from 'lodash';\nimport datacenter from './datacenter';\nimport ResultStorage from './ResultStorage';\n\nexport default class SpeedtestDigitalocean {\n\n    constructor() {\n        window.addEventListener('message', this.__onMessageHandler.bind(this), false);\n\n        this.logs = [];\n\n        this.options = {};\n\n        this.currentIndex = 0;\n        this.resultStorage = new ResultStorage();\n        this.currentDatacenterSet = this.datacenters;\n    }\n\n    get datacenters() {\n        return datacenter;\n    }\n\n    get currentTest() {\n        return this.currentDatacenterSet[this.currentIndex];\n    }\n\n    currentTest_get(key) {\n        return this.resultStorage.get(this.currentTest.name, key);\n    }\n\n    currentTest_update(key, value) {\n        this.resultStorage.update(this.currentTest.name, key, value);\n        this.resultStorage.orderBy('ping');\n    }\n\n    _runNext() {\n        // next test available\n        if (this.currentIndex < this.currentDatacenterSet.length - 1) {\n            this.currentIndex += 1;\n            this._run();\n        } else { // tests are finished\n            if (this.options.checkFastests === true) {\n                this.currentIndex = 0;\n                this.options.checkFastests = false;\n\n                // re-create dataset with fastests\n                const options = this.options;\n                this.currentDatacenterSet = this.resultStorage.results.filter(function (o, index) {\n                    return index < options.fastestsQnt;\n                });\n\n                this.currentDatacenterSet = this.currentDatacenterSet.map(function (o) {\n                    return o.datacenter;\n                });\n\n                this._run();\n            } else {\n                this._completed();\n            }\n        }\n    }\n\n    _run() {\n        this.currentTest_update('datacenter', this.currentTest);\n\n        window.sc_skin = '';\n        window.sc_autostart = 'true';\n        window.sc_bgc = '0xFFFFFF';\n        window.sc_bc = '0x333333';\n        window.sc_hc = '0x333333';\n        window.sc_cc = '0x0080ff';\n        window.sc_w = 400;\n        window.sc_h = 250;\n        window.version = 3;\n        window.sc_userid = 52722000;\n        window.sc_forceSecureWebsockets = 0;\n        window.serverUrl = this.currentTest.url;\n        window.serverTitle = this.currentTest.name;\n        window.license = '';\n        window.server = 'php';\n        window.latencyMeasurementType = 'icmp';\n\n        let sc_script = document.createElement('script');\n        sc_script.setAttribute('src', ((('https:' === document.location.protocol) ? 'https' : 'http') + '://www.speedcheckercdn.com/speedchecker.js'));\n        document.getElementsByTagName('head')[0].appendChild(sc_script);\n    }\n\n    _completed() {\n        this.stop();\n        this.cleanResults();\n    }\n\n    start(options) {\n\n        this.stop();\n\n        this.options = _.assign({\n            filterDatacenters: this.currentDatacenterSet.map(o => o.name),\n            checkFastests: false,\n            fastestsQnt: 4,\n        }, options || {});\n\n        this.currentDatacenterSet = _.filter(this.currentDatacenterSet, (o) => {\n            return this.options.filterDatacenters.indexOf(o.name) >= 0;\n        });\n\n        // create scope if it doesn't exist\n        if (!document.getElementById('speedcheckerdiv')) {\n            let element = document.createElement('div');\n            element.setAttribute('id', 'speedcheckerdiv');\n            document.getElementsByTagName('body')[0].appendChild(element);\n        }\n\n        this._run();\n    }\n\n    pause() {\n        if (document.getElementById('speedcheckerdiv')) {\n            document.getElementById('speedcheckerdiv').remove();\n        }\n    }\n\n    cleanResults() {\n        this.resultStorage.clean();\n    }\n\n    stop() {\n        this.pause();\n        this.cleanResults();\n        this.currentIndex = 0;\n        this.currentDatacenterSet = this.datacenters;\n    }\n\n    /**\n     * speedchecker messages\n     */\n\n    __onMessageHandler(event) {\n        const type = `__${event.data.type}`;\n        const value = event.data.value;\n\n        this.logs.push(event);\n\n        if (this[type]) {\n            this[type](value);\n        }\n    }\n\n    __speedcheckerDebug(value) {}\n    __speedcheckerDownloadPrepared(value) {}\n    __speedcheckerDownloadStarted(value) {}\n    __speedcheckerLinkValid(value) {}\n    __speedcheckerPingFinished(value) {}\n    __speedcheckerPingStarted(value) {}\n    __speedcheckerReady(value) {}\n    __speedcheckerStartRequired(value) {}\n    __speedcheckerStarted(value) {}\n    __speedcheckerUploadPrepared(value) {}\n    __speedcheckerUploadStarted(value) {}\n\n    __speedcheckerError(value) {\n        this.currentTest_update('retry', (this.currentTest_get('retry') ? this.currentTest_get('retry') : 0) + 1);\n        this.currentTest_update('error', value);\n        this._run();\n    }\n\n    __speedcheckerPingTestFinished(value) {\n        this.currentTest_update('ping', value);\n\n        if (this.options.checkFastests === true) {\n            this._runNext();\n        }\n    }\n\n    __speedcheckerDownloadProgress(value) {\n        this.currentTest_update('download', value[0]);\n    }\n\n    __speedcheckerDownloadFinished(value) {\n        this.currentTest_update('download', value);\n    }\n\n    __speedcheckerUploadProgress(value) {\n        this.currentTest_update('upload', value[0]);\n    }\n\n    __speedcheckerUploadFinished(value) {\n        this.currentTest_update('upload', value);\n    }\n\n    __speedcheckerTakenTestSaved(value) {\n        this._runNext();\n    };\n\n}\n","import React, { Component } from 'react';\nimport Filter from './Filter';\nimport Results from './Results';\n\nimport Speedtest from '../class/Speedtest';\n\nimport './App.css';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.speedtest = new Speedtest();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Filter speedtest={this.speedtest} />\n                <Results speedtest={this.speedtest} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/components/App';\n//import registerServiceWorker from './registerServiceWorker';\n\nimport packageJson from '../package.json';\nimport './ga.js';\n\nimport '../node_modules/uikit/dist/css/uikit.css';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\nReactDOM.render(\n    (\n        <div>\n            v {packageJson.version}\n        </div>\n    ),\n    document.getElementById('version')\n);\n\n//registerServiceWorker();\n"],"sourceRoot":""}